from config import bot, Dispatcher
from aiogram import types


#–†–∞–∑–≤–µ—Ä—Ç–∫–∞ –º–µ–Ω—é –∏–≥—Ä-----------------------------------------------------------------------------------------------------
async def Game(message: types.Message):
    item1 = types.KeyboardButton('üêä Crocodile')
    item2 = types.KeyboardButton('Word Game')
    item3 = types.KeyboardButton('‚¨Ö Back to menu')
    markup = types.ReplyKeyboardMarkup()
    markup.add(item1, item2, item3)
    await bot.send_message(message.chat.id, '–æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –∏–≥—Ä', reply_markup=markup)
#-----------------------------------------------------------------------------------------------------------------------


#–ò–≥—Ä–∞ –≤ —Å–ª–æ–≤–∞-----------------------------------------------------------------------------------------------------------
async def word_game(message: types.Message):
    pass
#-----------------------------------------------------------------------------------------------------------------------


#–†–∞–∑–≤–µ—Ä—Ç–∫–∞ –∏–≥—Ä----------------------------------------------------------------------------------------------------------
async def crocodile(message: types.Message):
    pass
#-----------------------------------------------------------------------------------------------------------------------




# async def expanded_menu(message: types.Message):
#–†–∞–∑–≤–µ—Ä—Ç–∫–∞ –≥—Ä–∞–º–∞—Ç–∏–∫–∏----------------------------------------------------------------------------------------------------
#     # elif message.text == 'üìù Grammar':
#     #     item1 = types.KeyboardButton('üï∞Ô∏è Time')
#     #     item2 = types.KeyboardButton('üëÆ‚Äç‚ôÇ Rules')
#     #     item3 = types.KeyboardButton('‚¨Ö Back to menu')
#     #     markup = types.ReplyKeyboardMarkup()
#     #     markup.add(item1, item2, item3)
#     #     await bot.send_message(message.chat.id, '–æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä–∞–º–∞—Ç–∏–∫–∏', reply_markup=markup)
#
#     elif message.text == 'üï∞Ô∏è Time':
#         item1 = types.KeyboardButton('‚è≥Present simple')
#         item2 = types.KeyboardButton('‚åöPresent continuous')
#         item3 = types.KeyboardButton('‚è∞Present perfect')
#         item4 = types.KeyboardButton('üîûPast simple')
#         item5 = types.KeyboardButton('‚¨Ö Back to menu')
#         markup = types.ReplyKeyboardMarkup()
#         markup.add(item1, item2, item3, item4, item5)
#         await bot.send_message(message.chat.id, '–æ–ø–∏—Å–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏', reply_markup=markup)
#
#     elif message.text == 'üëÆ‚Äç‚ôÇ Rules':
#         item1 = types.KeyboardButton('1')
#         item2 = types.KeyboardButton('2')
#         item3 = types.KeyboardButton('3')
#         item4 = types.KeyboardButton('4')
#         item5 = types.KeyboardButton('‚¨Ö Back to menu')
#         markup = types.ReplyKeyboardMarkup()
#         markup.add(item1, item2, item3, item4, item5)
#         await bot.send_message(message.chat.id, '–æ–ø–∏—Å–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏', reply_markup=markup)
# #-----------------------------------------------------------------------------------------------------------------------
#
#
# #–†–∞–∑–≤–µ—Ä—Ç–∫–∞ —Å—Ç—Ä–æ–∫--------------------------------------------------------------------------------------------------------
#
#     elif message.text == 'üìñ Irregular verbs':
#         item1 = types.KeyboardButton('üìï 1')
#         item2 = types.KeyboardButton('üìï 3')
#         item3 = types.KeyboardButton('üìï 5')
#         item4 = types.KeyboardButton('‚¨Ö Back to menu')
#         markup = types.ReplyKeyboardMarkup()
#         markup.add(item1, item2, item3, item4)
#         await bot.send_message(message.chat.id, '–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å —Å–∫–æ–ª—å–∫–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤ —è —Ç–µ–±–µ '
#                                                 '–≤—ã–¥–∞–º –Ω–∞ –∑–∞—É—á–∏–≤–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è.–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º –±—É–¥–µ—Ç —É—á–∏—Ç—å –ø–æ 5-10 '
#                                                 '—Å–ª–æ–≤ –≤ –¥–µ–Ω—å, –æ–¥–Ω–∞–∫–æ –≥–ª–∞–≤–Ω—ã–º –≤ —ç—Ç–æ–º –¥–µ–ª–µ, —É—á–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–ª–æ–≤–æ-—ç—Ç–æ '
#                                                 '—É–∂–µ –ø—Ä–æ–≥—Ä–µ—Å—Å.\np.s. ( –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∂–µ–ª–∞–µ–º–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤ –Ω–∞–ø–∏—à–∏ –≤ '
#                                                 '—á–∞—Ç üìï *–ø—Ä–æ–±–µ–ª* —Ü–∏—Ñ—Ä–∞)p.p.s. (–µ—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞ –≤–±–µ–π '
#                                                 '–∫–æ–º–∞–Ω–¥—É: üìï Restart)'
#                                                 '', reply_markup=markup)
#
#     elif message.text == 'üíÅ‚Äç‚ôÇ Basic stable expressions':
#         item1 = types.KeyboardButton('üìô 1')
#         item2 = types.KeyboardButton('üìô 3')
#         item3 = types.KeyboardButton('üìô 5')
#         item4 = types.KeyboardButton('‚¨Ö Back to menu')
#         markup = types.ReplyKeyboardMarkup()
#         markup.add(item1, item2, item3, item4)
#         await bot.send_message(message.chat.id, '–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å —Å–∫–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã—Ö —É—Å—Ç–æ–π—á–∏–≤—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π '
#                                                 '–∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ —è —Ç–µ–±–µ –≤—ã–¥–∞–º –Ω–∞ –∑–∞—É—á–∏–≤–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è.–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–º '
#                                                 '–≤–∞—Ä–∏–∞–Ω—Ç–æ–º –±—É–¥–µ—Ç —É—á–∏—Ç—å –ø–æ 5-10 —Å–ª–æ–≤ –≤ –¥–µ–Ω—å, –æ–¥–Ω–∞–∫–æ –≥–ª–∞–≤–Ω—ã–º –≤ —ç—Ç–æ–º '
#                                                 '–¥–µ–ª–µ, —É—á–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–ª–æ–≤–æ-—ç—Ç–æ —É–∂–µ –ø—Ä–æ–≥—Ä–µ—Å—Å.\np.s. ( –ø—Ä–∏ –≤—ã–±–æ—Ä–µ '
#                                                 '–∂–µ–ª–∞–µ–º–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤ –Ω–∞–ø–∏—à–∏ –≤ —á–∞—Ç üìô *–ø—Ä–æ–±–µ–ª* —Ü–∏—Ñ—Ä–∞)p.p.s. (–µ—Å–ª–∏ '
#                                                 '—Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞ –≤–±–µ–π –∫–æ–º–∞–Ω–¥—É: üìô Restart)'
#                                                 '', reply_markup=markup)
# #-----------------------------------------------------------------------------------------------------------------------
#
#
# #–†–∞–∑–≤–µ—Ä—Ç–∫–∞ —Å—Å—ã–ª–æ–∫-------------------------------------------------------------------------------------------------------
#     elif message.text == '–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏':
#         bot.send_message(message.chat.id, '–°—Å—ã–ª–∫–∏')
# #-----------------------------------------------------------------------------------------------------------------------
#
#
# #–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é-------------------------------------------------------------------------------------------------
#     if message.text == '‚¨Ö Back to menu':
#         await send_menu(message) #comand
# #-----------------------------------------------------------------------------------------------------------------------


def expanded_menu_hendlers(dp: Dispatcher):
    dp.register_callback_query_handler(Game,text='üïπÔ∏è Game')
