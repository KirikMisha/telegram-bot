from config import bot, Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, Message, ReplyKeyboardMarkup, \
    KeyboardButton
from aiogram.dispatcher import filters
from db import plass, restart_words

# –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–∫–∏ —Å—Ç—Ä–æ–∫–∞–º–∏ –∏–∑ —Ñ–∞–π–ª–æ–≤-----------------------------------------------------------------------------------
with open('./Vocabulary/Ordinary_words.txt', encoding='utf-8') as inp:
    o_words = inp.readlines()

with open('./Vocabulary/IrregularVerbs.txt', encoding='utf-8') as inp:
    i_words = inp.readlines()

with open('./Vocabulary/Stable_expressions.txt', encoding='utf-8') as inp:
    b_words = inp.readlines()


# ----------------------------------------------------------------------------------------------------------------------
41

# –†–∞–∑–≤—ë—Ä—Ç–∫–∞ –º–µ–Ω—é —Å—Ç—Ä–æ–∫--------------------------------------------------------------------------------------------------
async def vocabulary_menu(callback: CallbackQuery):
    await bot.delete_message(callback.from_user.id, callback.message.message_id)
    item1 = InlineKeyboardButton('üìö Ordinary words', callback_data='ordinary_words')
    item2 = InlineKeyboardButton('üìñ Irregular verbs', callback_data='irregular_verbs')
    item3 = InlineKeyboardButton('üíÅ‚Äç Basic stable expressions', callback_data='basic_stable_expressions')
    item4 = InlineKeyboardButton('‚¨Ö Back to menu', callback_data='back_menu')
    markup = InlineKeyboardMarkup(row_width=2)
    markup.add(item1, item2, item3, item4)
    await callback.message.answer('–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ç—ã —Å–º–æ–∂–µ—à—å –∏–∑—É—á–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –≥–ª–∞–≥–æ–ª—ã, –±–æ–ª–µ–µ 1000 —Å–ª–æ–≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ '
                                  '—è–∑—ã–∫–∞ –∫–æ—Ç–æ—Ä—ã–µ 100% –ø–æ–Ω—è–¥–æ–±—è—Ç—Å—è —Ç–µ–±–µ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –∏ –±–∞–∑–æ–≤—ã–µ —É—Å—Ç–æ–π—á–∏–≤—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è '
                                  '–∫–æ—Ç–æ—Ä—ã–µ —á–∞—â–µ –≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –Ω–æ—Å–∏—Ç–µ–ª–∏ —è–∑—ã–∫–∞ ', reply_markup=markup)


# ----------------------------------------------------------------------------------------------------------------------


# –†–∞–∑–≤—ë—Ä—Ç–∫–∞ –º–µ–Ω—é –æ–±—ã—á–Ω—ã—Ö —Å–ª–æ–≤-------------------------------------------------------------------------------------------
async def ordinary_words(callback: CallbackQuery):
    await bot.delete_message(callback.from_user.id, callback.message.message_id)
    item1 = KeyboardButton('üìó 1')
    item2 = KeyboardButton('üìó 5')
    item3 = KeyboardButton('üìó 10')
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(item1, item2, item3)
    await callback.message.answer('–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å —Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤ —è —Ç–µ–±–µ –≤—ã–¥–∞–º –Ω–∞ –∑–∞—É—á–∏–≤–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è.'
                                  '–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º –±—É–¥–µ—Ç —É—á–∏—Ç—å –ø–æ 5-10 —Å–ª–æ–≤ –≤ –¥–µ–Ω—å, –æ–¥–Ω–∞–∫–æ –≥–ª–∞–≤–Ω—ã–º –≤ —ç—Ç–æ–º –¥–µ–ª–µ, '
                                  '—É—á–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–ª–æ–≤–æ-—ç—Ç–æ —É–∂–µ –ø—Ä–æ–≥—Ä–µ—Å—Å.\np.s. ( –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∂–µ–ª–∞–µ–º–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ '
                                  '—Å–ª–æ–≤ –Ω–∞–ø–∏—à–∏ –≤ —á–∞—Ç üìó *–ø—Ä–æ–±–µ–ª* —Ü–∏—Ñ—Ä–∞)\np.p.s. (–µ—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞ '
                                  '–≤–±–µ–π –∫–æ–º–∞–Ω–¥—É: üìó Restart)', reply_markup=markup)


# ----------------------------------------------------------------------------------------------------------------------


# –†–∞–∑–≤—ë—Ä—Ç–∫–∞ –º–µ–Ω—é –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤----------------------------------------------------------------------------------
async def irregular_verbs(callback: CallbackQuery):
    await bot.delete_message(callback.from_user.id, callback.message.message_id)
    item1 = KeyboardButton('üìï 1')
    item2 = KeyboardButton('üìï 3')
    item3 = KeyboardButton('üìï 5')
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(item1, item2, item3)
    await callback.message.answer('–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å —Å–∫–æ–ª—å–∫–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤ —è —Ç–µ–±–µ –≤—ã–¥–∞–º –Ω–∞ –∑–∞—É—á–∏–≤–∞–Ω–∏–µ '
                                  '—Å–µ–≥–æ–¥–Ω—è.–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º –±—É–¥–µ—Ç —É—á–∏—Ç—å –ø–æ 5-10 —Å–ª–æ–≤ –≤ –¥–µ–Ω—å, –æ–¥–Ω–∞–∫–æ –≥–ª–∞–≤–Ω—ã–º –≤ —ç—Ç–æ–º'
                                  ' –¥–µ–ª–µ, —É—á–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–ª–æ–≤–æ-—ç—Ç–æ —É–∂–µ –ø—Ä–æ–≥—Ä–µ—Å—Å.\np.s. ( –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∂–µ–ª–∞–µ–º–æ–≥–æ '
                                  '–∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤ –Ω–∞–ø–∏—à–∏ –≤ —á–∞—Ç üìï *–ø—Ä–æ–±–µ–ª* —Ü–∏—Ñ—Ä–∞)\np.p.s. (–µ—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å —Å —Å–∞–º–æ–≥–æ '
                                  '–Ω–∞—á–∞–ª–∞ –≤–±–µ–π –∫–æ–º–∞–Ω–¥—É: üìï Restart)', reply_markup=markup)


# ----------------------------------------------------------------------------------------------------------------------


# –†–∞–∑–≤—ë—Ä—Ç–∫–∞ –º–µ–Ω—é –±–∞–∑–æ–≤—ã—Ö —É—Å—Ç–æ–π—á–∏–≤—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π---------------------------------------------------------------------------
async def basic_stable_expressions(callback: CallbackQuery):
    await bot.delete_message(callback.from_user.id, callback.message.message_id)
    item1 = KeyboardButton('üìô 1')
    item2 = KeyboardButton('üìô 3')
    item3 = KeyboardButton('üìô 5')
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(item1, item2, item3)
    await callback.message.answer('–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å —Å–∫–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã—Ö —É—Å—Ç–æ–π—á–∏–≤—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ —è '
                                  '—Ç–µ–±–µ –≤—ã–¥–∞–º –Ω–∞ –∑–∞—É—á–∏–≤–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è.–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º –±—É–¥–µ—Ç —É—á–∏—Ç—å –ø–æ 5-10 —Å–ª–æ–≤ –≤ '
                                  '–¥–µ–Ω—å, –æ–¥–Ω–∞–∫–æ –≥–ª–∞–≤–Ω—ã–º –≤ —ç—Ç–æ–º –¥–µ–ª–µ, —É—á–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–ª–æ–≤–æ-—ç—Ç–æ —É–∂–µ –ø—Ä–æ–≥—Ä–µ—Å—Å.\np.s. '
                                  '( –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∂–µ–ª–∞–µ–º–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤ –Ω–∞–ø–∏—à–∏ –≤ —á–∞—Ç üìô *–ø—Ä–æ–±–µ–ª* —Ü–∏—Ñ—Ä–∞)\np.p.s. (–µ—Å–ª–∏ '
                                  '—Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞ –≤–±–µ–π –∫–æ–º–∞–Ω–¥—É: üìô Restart)', reply_markup=markup)


# ----------------------------------------------------------------------------------------------------------------------


# –í—ã–≤–æ–¥ —Å–ª–æ–≤------------------------------------------------------------------------------------------------------------
async def word_output(message: Message):
    global column, number_of_words, words
    if message.text[0] == 'üìó':
        if message.text.replace('üìó ', '').isdigit():
            number_of_words = int(message.text.replace('üìó ', ''))
            column = 'number_ordinary_words'
            words = o_words
    elif message.text[0] == 'üìï':
        if message.text.replace('üìï ', '').isdigit():
            number_of_words = int(message.text.replace('üìï ', ''))
            column = 'number_Irregular_verbs'
            words = i_words
    elif message.text[0] == 'üìô':
        if message.text.replace('üìô ', '').isdigit():
            number_of_words = int(message.text.replace('üìô ', ''))
            column = 'number_Basic_stable_expressions'
            words = b_words
    else:
        bot.send_message(message.chat.id, 'Enter a number\n'
                                          'Example:(üìó or üìï or üìô) [number]')
    i = plass(message, column, number_of_words)
    number_of_words += i
    while i < number_of_words:
        await bot.send_message(message.chat.id, words[i])
        i = i + 1
        if i == len(words):
            await bot.send_message(message.chat.id, '–ú–æ–ª–æ–¥–µ—Ü, —Ç—ã –≤—ã—É—á–∏–ª –≤–µ—Å—å –ê–Ω–≥–ª–∏–π—Å–∫–∏–π )')
            await bot.send_photo(message.chat.id,
                                 'http://risovach.ru/upload/2014/03/mem/forever-alone_46449071_orig_.jpg')
            await restart_words(message, column)
            break
    item = KeyboardButton('‚¨Ö Back', callback_data='vocabulary_menu')
    markup = InlineKeyboardMarkup()
    markup.add(item)
    await message.answer(f'–í–æ—Ç —Ç–µ–±–µ –ø–æ–¥–±–æ—Ä–∫–∞ —Å–ª–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, —É–¥–∞—á–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è\np.s (—Ç—ã —É–∂–µ –¥–æ—à—ë–ª –¥–æ {number_of_words}'
                         f' —Å–ª–æ–≤–∞)', reply_markup=markup)


# ----------------------------------------------------------------------------------------------------------------------


# Register hendlers-----------------------------------------------------------------------------------------------------
def expanded_vocabulary_f(dp: Dispatcher):
    dp.register_callback_query_handler(vocabulary_menu, text='vocabulary_menu')
    dp.register_callback_query_handler(ordinary_words, text='ordinary_words')
    dp.register_callback_query_handler(irregular_verbs, text='irregular_verbs')
    dp.register_callback_query_handler(basic_stable_expressions, text='basic_stable_expressions')
    dp.register_message_handler(word_output, filters.Text(startswith='üìó') |
                                filters.Text(startswith='üìï') |
                                filters.Text(startswith='üìô'))
# -----------------------------------------------------------------------------------------------------------------------
